mine:
class Solution:
    def maxSlidingWindow(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: List[int]
        """
        stack = []
        res = []
        for i in range(len(nums)):
            if not stack:
                stack.append(i)
            elif i - stack[0] >= k:
                stack.pop(0)
                
            if not stack:
                stack.append(i)
            elif nums[i] <= nums[stack[0]] and nums[i] > nums[stack[-1]]:
                while nums[i] > nums[stack[-1]]:
                    stack.pop()
                stack.append(i)
            elif nums[i] > nums[stack[0]]:
                stack = []
                stack.append(i)
            elif nums[i] < nums[stack[-1]]:
                stack.append(i)
            if i >= k-1:
                res.append(nums[stack[0]])
        return res


updated: (same but faster)
class Solution:
    def maxSlidingWindow(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: List[int]
        """
        if not nums:
            return []
        stack = []
        res = []
        for i in range(len(nums)):
            if stack and i - stack[0] >= k:
                stack.pop(0)
            while stack and nums[i] > nums[stack[-1]]:
                stack.pop()
            stack.append(i)
            if i >= k-1:
                res.append(nums[stack[0]])
        return res