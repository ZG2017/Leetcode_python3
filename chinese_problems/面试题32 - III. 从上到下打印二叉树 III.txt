# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def levelOrder(self, root: TreeNode) -> List[List[int]]:
        res = dict()
        if not root:
            return []
        stack = [(0, root)]
        while stack:
            tmp = stack.pop(0)
            if tmp[1].left:
                stack.append((tmp[0]+1,tmp[1].left))
            if tmp[1].right:
                stack.append((tmp[0]+1,tmp[1].right))
            if tmp[0] not in res:
                res[tmp[0]] = []
            res[tmp[0]].append(tmp[1].val)
        sorted_holder = [item[1] for item in sorted(res.items(),key=lambda x:x[0])]
        res = []
        for idx,item in enumerate(sorted_holder):
            if idx%2 != 0:
                item = item[::-1]
            res.append(item)
        return res
