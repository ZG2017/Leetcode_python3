mine (TLE)
class Solution:
    def combinationSum4(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        if target == 0:
            return 0
        self.counter = 0
        def helper(tar):
            if tar == 0:
                self.counter += 1
                return
            elif tar <= 0:
                return
            for i in nums:
                helper(tar-i)
        helper(target)
        return self.counter


mine:(dp)
class Solution:
    def combinationSum4(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        if target == 0:
            return 0
        dp = [0 for _ in range(target+1)]
        dp[0] = 1
        for i in range(target+1):
            for j in nums:
                if i-j >=0:
                    dp[i] += dp[i-j]
        return dp[target]