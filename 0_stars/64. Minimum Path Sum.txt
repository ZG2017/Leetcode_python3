mine:
class Solution:
    def minPathSum(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        m = len(grid[0])
        n = len(grid)
        dp = [[0]*m for _ in range(n)]
        dp[0][0] = grid[0][0]
        """
        for i in range(1,m):
            dp[0][i] = grid[i]+dp[]
            """
            
        for i in range(n):
            for j in range(m):
                if not i and not j:
                    dp[i][j] = grid[0][0]
                elif not i:
                    dp[i][j] = dp[i][j-1] + grid[i][j]
                elif not j:
                    dp[i][j] = dp[i-1][j] + grid[i][j]
                else:
                    dp[i][j] = min(dp[i][j-1],dp[i-1][j])+ grid[i][j]
        return dp[n-1][m-1]