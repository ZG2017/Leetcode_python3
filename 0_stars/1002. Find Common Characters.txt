字符数组计数
class Solution:
    def commonChars(self, A: List[str]) -> List[str]:
        if not A:
            return []
        a = ord("a")
        holder = [float("inf")]*26
        char_holder = set(list(A[0]))
        for word in A:
            char_holder = char_holder & set(list(word))
            tmp = dict()
            for char in list(word):
                tmp[char] = tmp.get(char, 0)+1

            for char in tmp:
                holder[ord(char)-a] = min(tmp[char], holder[ord(char)-a])
        res = []
        for char in char_holder:
            for _ in range(holder[ord(char)-a]):
                res.append(char)
        return res
