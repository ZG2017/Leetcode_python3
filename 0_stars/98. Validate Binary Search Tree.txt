mine:
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isValidBST(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        def helper(node):
            if node == None:
                return []
            left_l = []
            right_l = []
            right_l = helper(node.right)
            left_l = helper(node.left)
            return left_l+[node.val]+right_l
        total_l = helper(root)
        return total_l == sorted(total_l) and len(total_l) == len(set(total_l))