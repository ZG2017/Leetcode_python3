"""
# Definition for a Node.
class Node:
    def __init__(self, val = 0, neighbors = []):
        self.val = val
        self.neighbors = neighbors
"""
class Solution:
    def cloneGraph(self, node: 'Node') -> 'Node':
        if not node:
            return 
        holder = dict()
        stack = [node]
        while stack:
            tmp = stack.pop()
            if not tmp:
                continue
            if tmp.val in holder:
                continue
            if tmp.neighbors:
                stack.extend(tmp.neighbors)
            if tmp.val not in holder:
                holder[tmp.val] = [Node(tmp.val), []]
                holder[tmp.val][1] = [i.val for i in tmp.neighbors]
        for tmp in holder.values():
            tmp[0].neighbors = [holder[i][0] for i in tmp[1]]
        return holder[1][0]