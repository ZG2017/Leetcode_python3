time is circled.

class Solution:
    def findMinDifference(self, timePoints: List[str]) -> int:
        sorted_list = sorted(timePoints)
        min_gap = 1441
        for i in range(len(sorted_list)-1):
            gap = self.countGap(sorted_list[i], sorted_list[i+1])
            if gap < min_gap:
                min_gap = gap
        
        final_gap = self.countGap(sorted_list[0], sorted_list[-1])
        if final_gap < min_gap:
            return final_gap
        else:
            return min_gap
        
        
    def countGap(self, time_1, time_2):
        hh_1, mm_1 = [int(i) for i in time_1.split(':')]
        total_min_1 = hh_1*60+mm_1
        hh_2, mm_2 = [int(i) for i in time_2.split(':')]
        total_min_2 = hh_2*60+mm_2
        gap = min(abs(total_min_2-total_min_1), abs(1440-(total_min_2-total_min_1)))
        return gap