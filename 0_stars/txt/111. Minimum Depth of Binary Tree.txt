mine:
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def minDepth(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        def helper(root):
            if not root:
                return 0
            if not root.left and not root.right:
                return 1
            elif root.left and not root.right:
                left_height = helper(root.left)
                return left_height+1
            elif root.right and not root.left:
                right_height = helper(root.right)
                return right_height+1
            else:
                left_height = helper(root.left)
                right_height = helper(root.right)
                return min(left_height,right_height)+1
                
        res = helper(root)
        return res