mine:
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def binaryTreePaths(self, root):
        """
        :type root: TreeNode
        :rtype: List[str]
        """
        if not root:
            return []
        template = "->"
        res = []
        def helper(root,tmp):
            if not tmp:
                tmp = str(root.val)
            else: 
                tmp = tmp + template + str(root.val)
            if not root.left and not root.right:
                    res.append(tmp)
            elif not root.left and root.right:
                    helper(root.right,tmp)
            elif root.left and not root.right:
                    helper(root.left,tmp)
            else:
                helper(root.right,tmp)
                helper(root.left,tmp)
        helper(root,"")
        return res


