class Solution:
    def get_num(self, a, b):
        return abs(a - b)

    def findRadius(self, houses: List[int], heaters: List[int]) -> int:
        houses.sort()
        heaters.sort()
        p_house = 0
        p_heater = 0
        min_ = 0
        previous_heater = 0
        while p_house < len(houses):
            while houses[p_house] > heaters[p_heater] and p_heater != len(heaters)-1:
                previous_heater = heaters[p_heater]
                p_heater = p_heater+1 if p_heater < len(heaters)-1 else p_heater
            if previous_heater < houses[p_house] < heaters[p_heater]:
                if previous_heater == 0:
                    if self.get_num(heaters[p_heater], houses[p_house]) > min_:
                        min_ = self.get_num(heaters[p_heater], houses[p_house])
                else:
                    if self.get_num(heaters[p_heater], houses[p_house]) <= self.get_num(previous_heater, houses[p_house]):
                        if self.get_num(heaters[p_heater], houses[p_house]) > min_:
                            min_ = self.get_num(heaters[p_heater], houses[p_house])
                    else:
                        if self.get_num(previous_heater, houses[p_house]) > min_:
                            min_ = self.get_num(previous_heater, houses[p_house])
            elif previous_heater < heaters[p_heater] < houses[p_house]:
                if self.get_num(heaters[p_heater], houses[p_house]) > min_:
                    min_ = self.get_num(heaters[p_heater], houses[p_house])
            p_house += 1
        return min_