2 for loop to check whether lhs and rhs of the word can be fit in blanks.

refer: https://leetcode.com/problems/check-if-word-can-be-placed-in-crossword/?envType=company&envId=google&favoriteSlug=google-thirty-days&difficulty=MEDIUM

class Solution:
    def placeWordInCrossword(self, board: List[List[str]], word: str) -> bool:
        M,N = len(board),len(board[0])
        L = len(word)
        def canPlace(r,c,dirX,dirY,i):
            # check all the chars in board starting for r,c
            while i<L:
                if r<0 or c<0 or r>=M or c>=N or board[r][c] == '#' or (board[r][c] != ' ' and board[r][c] != word[i]):
                    return False
                r+=dirX
                c+=dirY
                i+=1
            # check if it is end of blank space
            if r<0 or c<0 or r>=M or c>=N or board[r][c] == '#':
                return True
            return False

        for i in range(M):
            for j in range(N):
                # down
                if (i-1<0 or board[i-1][j] == '#') and board[i][j] != '#':
                    if canPlace(i,j,1,0,0):
                        return True
                # right
                if (j-1<0 or board[i][j-1] == '#') and board[i][j] != '#':
                    if canPlace(i,j,0,1,0):
                        return True
                # up
                if (i+1>=M or board[i+1][j] == '#') and board[i][j] != '#':
                    if canPlace(i,j,-1,0,0):
                        return True
                # left
                if (j+1>=N or board[i][j+1] == '#') and board[i][j] != '#':
                    if canPlace(i,j,0,-1,0):
                        return True
        return False