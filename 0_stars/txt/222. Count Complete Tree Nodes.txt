mine:
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def countNodes(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        def helper(root,left_d = -1,right_d = -1):
            if not root:
                return 0
            cur = root
            if left_d == -1:
                left_d = 0
                while cur:
                    left_d += 1
                    cur = cur.left
            cur = root
            if right_d == -1:
                right_d = 0
                while cur:
                    right_d += 1
                    cur = cur.right 
            if left_d == right_d:
                return 2**left_d-1
            else:
                left_n = helper(root.left,left_d = left_d-1,right_d = -1)
                right_n = helper(root.right,left_d = -1,right_d = right_d-1)
                return left_n + right_n + 1
        res = helper(root,left_d = -1, right_d = -1)
        return res