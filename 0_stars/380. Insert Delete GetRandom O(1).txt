mine: (take too much time)
class RandomizedSet:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.saver = {}

    def insert(self, val):
        """
        Inserts a value to the set. Returns true if the set did not already contain the specified element.
        :type val: int
        :rtype: bool
        """
        if val not in self.saver:
            self.saver[val] = val
            return True
        return False
        

    def remove(self, val):
        """
        Removes a value from the set. Returns true if the set contained the specified element.
        :type val: int
        :rtype: bool
        """
        if val in self.saver:
            self.saver.pop(val)
            return True
        return False
        

    def getRandom(self):
        """
        Get a random element from the set.
        :rtype: int
        """
        import random
        return random.choice([i for i in self.saver.keys()])
        


# Your RandomizedSet object will be instantiated and called as such:
# obj = RandomizedSet()
# param_1 = obj.insert(val)
# param_2 = obj.remove(val)
# param_3 = obj.getRandom()



updated:(use hash table to save the index of val in the list)
class RandomizedSet:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.saver = {}
        self.list = []

    def insert(self, val):
        """
        Inserts a value to the set. Returns true if the set did not already contain the specified element.
        :type val: int
        :rtype: bool
        """
        if val not in self.saver:
            self.saver[val] = len(self.list)
            self.list.append(val)
            return True
        return False
        

    def remove(self, val):
        """
        Removes a value from the set. Returns true if the set contained the specified element.
        :type val: int
        :rtype: bool
        """
        if val in self.saver:
            index = self.saver[val]
            self.saver[self.list[-1]] = index
            self.list[index],self.list[-1] = self.list[-1],self.list[index]
            self.list.pop()
            self.saver.pop(val)
            return True
        return False
        

    def getRandom(self):
        """
        Get a random element from the set.
        :rtype: int
        """
        import random
        return random.choice(self.list)
        


# Your RandomizedSet object will be instantiated and called as such:
# obj = RandomizedSet()
# param_1 = obj.insert(val)
# param_2 = obj.remove(val)
# param_3 = obj.getRandom()
