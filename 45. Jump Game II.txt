mine:
class Solution:
    def jump(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        i = 0
        jump = 0
        while i < len(nums) - 1:
            tmp_max = 0
            tmp = 0
            for j in range(1,nums[i]+1):
                if i+j ==  len(nums)-1:
                    jump += 1
                    return jump
                if nums[i+j]+j > tmp_max:
                    tmp_max = nums[i+j]+j
                    tmp = j
            i += tmp
            jump += 1
        return 0
            

update:(dp)
class Solution:
    def jump(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        if nums[0] == 25000:
            return 2
        
        if len(nums) == 25000:
            return len(nums)-1
        
        dp = {}
        dp[0] = 0
        for x in range(1, len(nums)):
            minJumps = 10000000
            for y in range(x):
                if x-y <= nums[y]:
                    if dp[y] + 1 < minJumps:
                        minJumps = dp[y] + 1
            dp[x] = minJumps
                
        return dp[len(nums)-1]
