mine:
class Solution:
    def minimumTotal(self, triangle):
        """
        :type triangle: List[List[int]]
        :rtype: int
        """
        for i in range(1,len(triangle)):
            for j in range(len(triangle[i])):
                if j == 0:
                    triangle[i][j] = triangle[i-1][0]+triangle[i][j]
                elif j == len(triangle[i])-1:
                    triangle[i][j] = triangle[i-1][-1]+triangle[i][j]
                else:
                    triangle[i][j] = min(triangle[i-1][j-1]+triangle[i][j],triangle[i-1][j]+triangle[i][j])
        return min(triangle[-1])


updated:(from buttom to top)
class Solution:
    def minimumTotal(self, triangle):
        """
        :type triangle: List[List[int]]
        :rtype: int
        """
        if len(triangle) == 0: return 0
        minimal = triangle[-1]
        for r in reversed(range(len(triangle)-1)):
            for i in range(len(triangle[r])):
                minimal[i] = min(minimal[i], minimal[i+1]) + triangle[r][i]
        return minimal[0]