mine:(TLE)
class Solution:
    def candy(self, ratings):
        """
        :type ratings: List[int]
        :rtype: int
        """
        if len(ratings) == 1:
            return 1
        elif len(ratings) == 2:
            return 3 if ratings[0] != ratings[1] else 2
        candies = [0]*len(ratings)
        ratings_cp = ratings.copy()
        counter = 0 
        while counter < len(ratings):
            tmp_min_index = ratings_cp.index(min(ratings_cp))
            if tmp_min_index == 0:
                candies[tmp_min_index] = candies[tmp_min_index+1]+1
            elif tmp_min_index == len(ratings)-1:
                if ratings[tmp_min_index-1] == ratings[tmp_min_index]:
                    candies[tmp_min_index] = 1
                else:
                    candies[tmp_min_index] = candies[tmp_min_index-1]+1
            else:
                if candies[tmp_min_index-1] == 0 and candies[tmp_min_index+1] == 0:
                    candies[tmp_min_index] = 1
                elif candies[tmp_min_index-1] != 0 and candies[tmp_min_index+1] == 0:
                    if ratings[tmp_min_index-1] == ratings[tmp_min_index]:
                        candies[tmp_min_index] = 1
                    else:
                        candies[tmp_min_index] = candies[tmp_min_index-1] + 1
                elif candies[tmp_min_index-1] == 0 and candies[tmp_min_index+1] != 0:
                    candies[tmp_min_index] = candies[tmp_min_index+1] + 1
                else:
                    if ratings[tmp_min_index-1] == ratings[tmp_min_index]:
                        candies[tmp_min_index] = candies[tmp_min_index+1] + 1
                    else:
                        candies[tmp_min_index] = max(candies[tmp_min_index+1],candies[tmp_min_index-1])+1
            ratings_cp[tmp_min_index] = float("inf")         
            counter += 1
        return sum(candies)


updated:(greedy, first perorder, then postorder)
class Solution:
    def candy(self, ratings):
        """
        :type ratings: List[int]
        :rtype: int
        """
        tmp_1 = [1]*len(ratings)
        tmp_2 = [1]*len(ratings)
        for i in range(1,len(ratings)):
            if ratings[i] > ratings[i-1]:
                tmp_1[i] = tmp_1[i-1]+1
        ratings = ratings[::-1]
        for i in range(1,len(ratings)):
            if ratings[i] > ratings[i-1]:
                tmp_2[i] = tmp_2[i-1]+1
        sums = 0
        tmp_2 = tmp_2[::-1]
        for i in range(len(tmp_1)):
            sums += max(tmp_1[i],tmp_2[i])
        return sums