mine:(TLE)
class Solution:
    def largestRectangleArea(self, heights):
        """
        :type heights: List[int]
        :rtype: int
        """
        p2 = 0
        max_area = 0
        while p2 <len(heights):
            p1 = 0
            tmp = heights[p2]
            while p1 <= p2:
                tmp_max = max(min(heights[p1:p2+1])*(p2-p1+1),tmp)
                if tmp_max>max_area:
                    max_area = tmp_max
                p1 += 1
            p2 += 1
            
        return max_area



updated:  (stack)
class Solution(object):
    def largestRectangleArea(self, heights):
        """
        :type heights: List[int]
        :rtype: int
        """
        heights.append(0)
        stack = [-1]
        result = 0
        for i in range(len(heights)):
            while heights[i] < heights[stack[-1]]:
                h = heights[stack.pop()]
                w = i - stack[-1] - 1
                result = max(result, h * w)
            stack.append(i)
        heights.pop()
        return result