updated:(TLE)
class Solution:
    def maxProfit(self, k, prices):
        """
        :type k: int
        :type prices: List[int]
        :rtype: int
        """
        if not prices or not k:
            return 0
        k = min(int(len(prices)/2),k)
        localp = [[0 for _ in range(len(prices))] for _ in range(k+1)]
        globalp = [[0 for _ in range(len(prices))] for _ in range(k+1)]
        
        for i in range(1,k+1):
            for j in range(1,len(prices)):
                localp[i][j] = max(0,localp[i][j-1]-prices[j-1]+prices[j],globalp[i-1][j-1]-prices[j-1]+prices[j])
                globalp[i][j] = max(localp[i][j],globalp[i][j-1])
        return globalp[-1][-1]